debug(fit_points)
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
isolate(df())
seq
seq_sub
debug(get_expr_q)
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
isolate(df())
x
expr
debug(add_points)
library(ggcircos)
debug(add_points)
debug(get_expr_q)
source('C:/Users/HarryPeaker/ggcircos/R/add_points.R')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
x
expr
parent.env()
parent.env(environment)
parent.env(environment())
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
create_track_df
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
if (!require(devtools)) install.packages("devtools")
devtools::install_github('hadley/scales')
devtools::install_github("rstudio/d3heatmap")
library(d3heatmap)
d3heatmap(scale(mtcars), colors = "Greens", theme = "dark")
?d3heatmap
ribbons_df <- data.frame(chr_from = chr_from, chr_to = chr_to,
pos_from_start = pos_from_start,
pos_from_end = pos_from_end,
pos_to_start = pos_to_start,
pos_to_end = pos_to_end)
library(ggcircos)
library(shiny)
## define some sequences
chroms <- c(1,2,3)
chrom_lengths <- c(10000, 5000, 2000)
total_gap <- 0.1
radians <- create_radians(chroms, chrom_lengths, total_gap)
# create sample data
chrom_positions <- sapply(chrom_lengths, sample, 20)
points_df <- data.frame(name = factor(chroms), position = c(t(chrom_positions))) %>% arrange(name, position)
points_df$value <- rnorm(20 * length(chroms))
points_df$key <- 1:60
chrom_positions <- sapply(chrom_lengths, sample, 20)
points_df2 <- data.frame(name = factor(chroms), position = c(t(chrom_positions))) %>% arrange(name, position)
points_df2$value <- rnorm(20 * length(chroms))
points_df2$key <- 1:60
chr_froms <- sample(chroms, 10, replace = T)
chr_tos <- sample(chroms, 10, replace = T)
pos_froms <- sapply(chr_froms, function(x) sample(chrom_lengths[chroms == x], 1))
pos_tos <- sapply(chr_tos, function(x) sample(chrom_lengths[chroms == x], 1))
links_df <- data.frame(chr_from = chr_froms, pos_from = pos_froms, chr_to = chr_tos, pos_to = pos_tos)
links_df2 <- data.frame(chr_from = chr_froms, pos_from = pos_froms + 200, chr_to = chr_tos, pos_to = pos_tos)
chr_to <- sample(chroms, 5, replace = T)
chr_from <- sample(chroms, 5, replace = T)
pos_from_start <- sapply(chr_from, function(x) sample(chrom_lengths[chroms == x] - 1000, 1))
pos_from_end <- pos_from_start + sample(100:1000, 5)
pos_to_start <- sapply(chr_to, function(x) sample(chrom_lengths[chroms == x] - 1000, 1))
pos_to_end <- pos_to_start + sample(100:1000, 5)
ribbons_df <- data.frame(chr_from = chr_from, chr_to = chr_to,
pos_from_start = pos_from_start,
pos_from_end = pos_from_end,
pos_to_start = pos_to_start,
pos_to_end = pos_to_end)
ribbons_df2 <- data.frame(chr_from = chr_from, chr_to = chr_to,
pos_from_start = pos_from_start,
pos_from_end = pos_from_end - 100,
pos_to_start = pos_to_start + 300,
pos_to_end = pos_to_end + 300)
ribbons_df
fit_ribbons(ribbons_df$chr_from, ribbons_df$chr_to, ribbons_df$pos_from_start, ribbons_df$pos_from_end, ribbons_df$pos_to_start, ribbons_df$pos_to_end)
fit_ribbons(ribbons_df$chr_from, ribbons_df$chr_to, ribbons_df$pos_from_start, ribbons_df$pos_from_end, ribbons_df$pos_to_start, ribbons_df$pos_to_end, seq_df)
seq_df <- create_seq_df(radians)
fit_ribbons(ribbons_df$chr_from, ribbons_df$chr_to, ribbons_df$pos_from_start, ribbons_df$pos_from_end, ribbons_df$pos_to_start, ribbons_df$pos_to_end, seq_df)
fit_ribbons(ribbons_df$chr_from, ribbons_df$chr_to, ribbons_df$pos_from_start, ribbons_df$pos_from_end, ribbons_df$pos_to_start, ribbons_df$pos_to_end, seq_df, 1, 1, 0.1)
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
library(rjson)
library(rjson)
library(RCurl)
json <- getURL("http://edcvnjs02:1401/search/?q=retinopathy&s=10&p=1")
json
list <- fromJSON(json)
json <- getURL("http://edcvnjs02:1401/search/?q=retinopathy&s=10&p=1")
json
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10")
list <- fromJSON(json)
list
str(list)
list$parameters
results <- list$results
str(results)
do.call(c, results)
do.call(unlist, results)
str(results)
lapply(results, unlist)
do.call(rbind, lapply(results, unlist))
df <- do.call(rbind, lapply(results, unlist))
lapply(df, class)
as.data.frame
as.data.frame.list
as.data.frame(list(x=1, y = 2))
as.data.frame(list(x = 1, y = 2))
as.data.frame(list(x = c(1, 2), y = 2))
df <- as.data.frame(df)
str(df)
?rbind
df <- do.call(rbind.data.frame, lapply(results, unlist))
str(df)
results
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000")
list <- fromJSON(json)
str(list)
## general info about the query
(parameters <- list$parameters)
## the results
results <- list$results
## list of lists
#str(results)
df <- do.call(rbind.data.frame, lapply(results, unlist))
str(df)
df <- do.call(rbind.data.frame, lapply(results, unlist), stringAsFactors = FALSE)
df <- do.call(rbind.data.frame, lapply(results, unlist), stringsAsFactors = FALSE)
?do.call
df <- do.call(rbind.data.frame, c(lapply(results, unlist), stringsAsFactors = FALSE))
str(df)
rbind.data.frame
as.data.frame
as.data.frame()
as.data.frame(NULL)
df <- do.call(rbind, lapply(results, unlist))
df
as.data,frame(df, stringsAsFactors = FALSE)
as.data.frame(df, stringsAsFactors = FALSE)
str(as.data.frame(df, stringsAsFactors = FALSE))
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10")
list <- fromJSON(json)
str(list)
## general info about the query
(parameters <- list$parameters)
## the results
results <- list$results
## list of lists
#str(results)
## unnest and bind as rows
df <- do.call(rbind, lapply(results, unlist))
df
data.frame(df)
str(data.frame(df))
?rbind.data.frame
df <- data.frame(df, stringsAsFactors = FALSE)
str(df)
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000")
list <- fromJSON(json)
str(list)
## general info about the query
(parameters <- list$parameters)
## the results
results <- list$results
## list of lists
#str(results)
## unnest and bind as rows
df <- do.call(rbind, lapply(results, unlist))
df <- as.data.frame(df, stringsAsFactors = FALSE)
})
system.time({df <- do.call(rbind, lapply(results, unlist))
df <- as.data.frame(df, stringsAsFactors = FALSE)
})
library(rjson)
library(RCurl)
## get first 10 records for search term retinopathy in all ontologies
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000")
list <- fromJSON(json)
str(list)
## general info about the query
(parameters <- list$parameters)
## the results
results <- list$results
results <- rep(results, 100)
length(results)
system.time({df <- do.call(rbind, lapply(results, unlist))
df <- as.data.frame(df, stringsAsFactors = FALSE)
})
system.time(df <- do.call(rbind.data.frame, lapply(results, unlist)))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000000000"))
json
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000000"))
json
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000000"))
json
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=100000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000000000"))
str(json)
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000000"))
json
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=9999999999"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=5000000000"))
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1000000000"))
str(json)
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=2000000000"))
str(json)
system.time(json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=3000000000"))
str(json)
3000000000/2^8
3000000000/2^16
3000000000/2^17
3000000000/2^18
3000000000/2^19
3000000000/2^20
3000000000/2^21
3000000000/2^24
3000000000/2^28
3000000000/2^32
3000000000/2^31
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s="), 2^31)
)
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", 2^31))
)
str(json)
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", 2^31-1))
)
str(json)
2^31
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", 2^31-1))
)
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s="), s))
s <- 2^31
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s="), s))
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json)
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 10000
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json)
s <- 2^31
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
json
s <- 2^31-1
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json)
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json) ## returns 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json) ## returns 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 2^31-1
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 2^31-1
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 2^31-1
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
str(json) ## returns 694
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=0"))
json
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1"))
list <- fromJSON(json)
list$parameters$s
list$parameters$total
system.time({
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1"))
list <- fromJSON(json)
s <- list$parameters$total
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s))
})
system.time({
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1"))
list <- fromJSON(json)
s <- list$parameters$total
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s))
})
system.time({
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1"))
list <- fromJSON(json)
s <- list$parameters$total
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s))
})
?system.tim
?system.time
s <- 694
system.time(json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s)))
system.time({
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=1"))
list <- fromJSON(json)
s <- list$parameters$total
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=", s))
})
str(json)
system.time(1+1)
system.time(lapply(1:100000, function(i) 1+1))
system.time(lapply(1:100000, function(i) 1+1))
system.time(lapply(1:100000, function(i) 1+1))
system.time(lapply(1:100000, function(i) 1+1))
system.time({lapply(1:100000, function(i) 1+1)
lapply(1:100000, function(i) 1+1)
})
system.time(lapply(1:100000, function(i) 1+1))
system.time({lapply(1:100000, function(i) 1+1)
lapply(1:100000, function(i) 1+1)
})
df
library(rjson)
library(RCurl)
## BASIC WORKFLOW
## get first 10 records for search term retinopathy in all ontologies
json <- getURL("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=10")
list <- fromJSON(json)
str(list)
## general info about the query
(parameters <- list$parameters)
## the results
results <- list$results
## list of lists
#str(results)
## unnest and bind as rows
df <- do.call(rbind, lapply(results, unlist))
df <- as.data.frame(df, stringsAsFactors = FALSE)
str(df)
all_json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=retinopathy&p=1&s=694"))
paste("a", NULL, 1)
get_results <- function(query, s = 10, p = 1, ontology = NULL) {
json <- getURL(paste0("http://edcvnjs02:1401/api/search?q=", query, "&o=", ontology, "&p=", p, "&s=", s))
l <- fromJSON(json)
results <- l$results
df <- do.call(rbind, lapply(results, unlist))
as.data.frame(df, stringsAsFactors = FALSE)
}
get_results("retinopathy")
get_results("retinopathy", 20)
df2 <- get_results(retinopathy)
df2 <- get_results("retinopathy")
identical(df, df2)
all <- get_results("retinopathy", 694)
str(all)
snomed <- get_results(retinopathy, 694, ontology = "/SNOMED/11.0.0_20110401000001/314008009")
snomed <- get_results("retinopathy", 694, ontology = "/SNOMED/11.0.0_20110401000001/314008009")
snomed
snomed <- get_results("retinopathy", 694, ontology = "/SNOMED/11.0.0_20110401000001")
snomed
names(all)
all[all$ontology_name == "SNOMED"]
all[all$ontology_name == "SNOMED",]
identical(all[all$ontology_name == "SNOMED",], snomed)
all[all$ontology_name == "SNOMED",] == snomed
all(all[all$ontology_name == "SNOMED",] == snomed)
all_results <- get_results("retinopathy", 694)
all(all_results[all_results$ontology_name == "SNOMED",] == snomed)
all_results <- get_results("retinopathy", 694)
snomed_results <- get_results("retinopathy", 694, ontology = "/SNOMED/11.0.0_20110401000001")
# post filter all_results to get the same thing
all(all_results[all_results$ontology_name == "SNOMED",] == snomed_results)
snomed_results
snomed_results[1,]
snomed[grep("type 1", snomed$term), ]
snomed[grep("pigment", snomed$term), ]
snomed[grep("diabtes", snomed$term), ]
snomed[grep("diabetes", snomed$term), ]
diabetes_results <- snomed_results[grep("diabetes", snomed_results$term)]
diabetes_results <- snomed_results[grep("diabetes", snomed_results$term),]
diabetes_reults
diabetes_results
diabetes_results <- diabetes_results[!duplicated(diabetes_results$concept_identifier),]
diabetes_reulst
diabetes_results
grep([0-9], c("a", 1, 2, 0, "e"))
grep("[0-9]", c("a", 1, 2, 0, "e"))
grep("[0-9]{2}", c("a", 1, 23, 0, "e"))
grep("[0-9a-f]{2}", c("a", 1, 23, 0, "e"))
grep("[0-9a-f]", c("a", 1, 23, 0, "e"))
grep("[0-9a-f]", c("a", 1, 23, 0, "e", "l"))
shiny::runApp('R_scripts/ggcircos_examples/reactive_tests')
grep("[a-zA-Z0-9]*", c("G345"))
grep("[a-zA-Z0-9]*", c("G345", X.353))
grep("[a-zA-Z0-9]*", c("G345", "X.353"))
grep("[a-zA-Z0-9]*", c("G345", "X45.3"))
grep("[a-zA-Z0-9]*", c("G345", "X45.3", "."))
grep("[a-zA-Z0-9]", c("G345", "X45.3", "."))
grep("[a-zA-Z0-9]+", c("G345", "X45.3", "."))
grep("[a-zA-Z0-9\.]+", c("G345", "X45.3", "."))
grep("[a-zA-Z0-9\\.]+", c("G345", "X45.3", "."))
grep("\\d")
grep("\\d", 1)
grep("\\d", c(1,2,3,4))
grep("\\d{1, 3}", c(1,2,3,4))
grep("\\d{1, 3}", c(1,2,3,4))
grep("\\d{1,3}", c(1,2,3,4))
grep("\\d{0,3}", c(1,2,3,4))
grep("\\d{0,3}", c(1,2,3,4, ""))
grep("\\d{1,3}", c(1,2,3,4, ""))
grep("\\d{0,3}", c(100, 0, 15.1, 105.75))
grep("\\d{0,3}\\.\\d{1,3}", c(100, 0, 15.1, 105.75))
grep("\\d{0,3}(\\.\\d{1,3})", c(100, 0, 15.1, 105.75))
grep("\\d{0,3}(\\.\\d{1,3})?", c(100, 0, 15.1, 105.75))
grep("\\d{1,3}(\\.\\d{1,3})?", c(100, 0, 15.1, 105.75))
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('R_scripts/ggcircos_examples/population_flows')
shiny::runApp('population_flows')
shiny::runApp('population_flows')
setwd("R_scripts/ggcircos_examples/icgc_example/clean_data/donors_clean.csv")
setwd("R_scripts/ggcircos_examples/icgc_example")
donors <- read.csv("clean_data/donors_clean.csv")
str(donors)
snps <- read.csv("clean_data/snp_clean.csv")
struct <- read.csv("clean_data//struct_clean.csv")
cnv <- read.csv("clean_data/cnv_clean.csv")
str(struct)
create_radians
str(struct)
str(donors)
donors <- filter(donors, donor_sex == "male")
str(donors)
unique(donors$icgc_donor_id)
str(struct)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(cnv)
snps <- read.csv("clean_data/snp_clean.csv")
struct <- read.csv("clean_data//struct_clean.csv")
cnv <- read.csv("clean_data/cnv_clean.csv")
str(cnv)
shiny::runApp()
shiny::runApp()
shiny::runApp()
donors <- read.csv("clean_data/donors_clean.csv")
donors <- filter(donors, donor_sex == "male")
str(donors)
unique(donors$icgc_donor_id)
shiny::runApp()
max(cnv$copy_number)
min(cnv$copy_number)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
